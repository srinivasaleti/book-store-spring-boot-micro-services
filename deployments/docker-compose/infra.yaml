version: '3.8'
name: book-store-micro-service

services:
  catalog-db:
    image: postgres:16-alpine
    container_name: catalog-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "15432:5432"
    volumes:
      - ../../tmp/catelog-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    networks:
      - book-store-network
  orders-db:
    image: postgres:16-alpine
    container_name: orders-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "15433:5432"
    volumes:
      - ../../tmp/orders-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
    networks:
      - book-store-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:5672"   # AMQP port
      - "15673:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ../../tmp/rabbitmq:/var/lib/postgresql/data
    networks:
      - book-store-network
  catalog-service:
    image: catalog-service
    container_name: catalog-service
    environment:
      DB_URL: jdbc:postgresql://catalog-db:5432/postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    ports:
      - "18081:8081"
    networks:
      - book-store-network

volumes:
  postgres_data:
    driver: local

networks:
  book-store-network:
    driver: bridge
